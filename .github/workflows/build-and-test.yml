name: Build and test

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive' 

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev libfl-dev doxygen
      
    - name: Install Python packages
      run:  |
        cd / # Workaround for pip installing binaries into '/home/runner/.local/bin' 
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install -r ${{github.workspace}}/docs/requirements.txt

    - name: Create build environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Create install environment
      run: cmake -E make_directory ${{github.workspace}}/install

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNETLIST_PATHS_BUILD_DOCS=1 -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install

    - name: Cache Verilator build
      uses: actions/cache@v2
      env:
        cache-name: cache-verilator-build
      with:
        path: ${{github.workspace}}/thirdparty/verilator
        key: ${{runner.os}}-${{env.cache-name}}-${{hashFiles(.git/modules/verilator)}}
        restore-keys: |
          ${{runner.os}}-${{env.cache-name}}-

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Install
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --install . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE --verbose

    - name: Publish documentation
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        publish_dir: ${{github.workspace}}/build/docs/sphinx
